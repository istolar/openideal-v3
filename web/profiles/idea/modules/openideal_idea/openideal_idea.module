<?php

/**
 * @file
 * Contains openideal_idea.module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function openideal_idea_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'node_idea_form') {
    // Check challenge query parameter.
    if ($challenge_id = \Drupal::request()->get('challenge')) {
      // Load predefined challenge node.
      $predefined_challenge = \Drupal::entityTypeManager()
        ->getStorage('node')
        ->load($challenge_id);
      if (!empty($predefined_challenge)) {
        // Set predefined challenge to the idea node form element.
        $form['field_challenge']['widget'][0]['target_id']['#default_value'] = $predefined_challenge;
      }
    }
  }

  if (!in_array($form_id, ['node_idea_edit_form', 'node_idea_form'])) {
    return;
  }

  // Get settings page for default challenge entity.
  $openideal_config = config_pages_config('openideal_configurations');
  if (!empty($openideal_config)) {
    // Get default challenge entity.
    $default_challenge = $openideal_config->field_default_challenge->entity;
  }

  if (
      !empty($default_challenge)
      && empty($form['field_challenge']['widget'][0]['target_id']['#default_value'])
  ) {
    // Set default value for challenge form element of the idea content type.
    $form['field_challenge']['widget'][0]['target_id']['#default_value'] = $default_challenge;
  }

  $form['actions']['submit']['#submit'][] = '_openideal_idea_form_submit';
}

/**
 * Custom submit handler for idea create/edit form.
 */
function _openideal_idea_form_submit($form, FormStateInterface $form_state) {
  $node = $form_state->getFormObject()->getEntity();
  // Check duplicate_of field of the entity.
  if (!empty($form_state->getValue('field_duplicate_of')[0]['target_id'])) {
    // Set 'merged' value for idea_phase field of the entity.
    $node->field_idea_phase->target_id = 5;
    $node->save();
  }
}
